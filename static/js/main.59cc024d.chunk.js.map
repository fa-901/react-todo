{"version":3,"sources":["components/ThemeToggler.js","components/Todo/TodoItem.js","components/Todo/index.js","App.js","index.js"],"names":["Toggler","props","_useState","useState","_useState2","Object","slicedToArray","isDark","themeChange","useEffect","theme","react_default","a","createElement","className","type","id","checked","onChange","htmlFor","TodoItem","label","currentInput","inputUpdate","_useState3","_useState4","isEdit","toggleEdit","updateTask","inputRef","current","focus","useRef","editBox","placeholder","value","e","currentTarget","onKeyDown","key","onBlur","ref","concat","onClick","dislayItem","i","check","Button","deleteItem","toolTip","children","Todo","list","listUpdate","_useState5","_useState6","showType","changeShow","updateFn","localStorage","setItem","JSON","stringify","Storage","data","getItem","parse","displayList","map","v","c","val","index","updateItem","splice","filter","listHelper","length","btnList","types","btnGroup","react","push","App","href","rel","target","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.59cc024d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function Toggler(props) {\r\n    const [isDark, themeChange] = useState(false);\r\n\r\n    useEffect(() => {\r\n        props.theme(isDark ? 'dark' : 'light');\r\n    }, [isDark]);\r\n\r\n    return (\r\n        <div className={`text-right`}>\r\n            <div className=\"custom-control custom-switch\">\r\n                <input type=\"checkbox\" className=\"custom-control-input\" id=\"customSwitch1\" checked={isDark} onChange={() => { themeChange(!isDark) }} />\r\n                <label className=\"custom-control-label\" htmlFor=\"customSwitch1\">Toggle Theme</label>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState, useRef, useEffect } from 'react';\r\n\r\nexport default function TodoItem(props) {\r\n    const [currentInput, inputUpdate] = useState(props.label);\r\n    const [isEdit, toggleEdit] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isEdit) {\r\n            inputRef.current.focus();\r\n        }\r\n    }, [isEdit])\r\n\r\n    function handleInput(e) {\r\n        const { value } = e.currentTarget;\r\n        inputUpdate(value);\r\n    }\r\n\r\n    function handleKeyDown(e) {\r\n        if (e.key !== 'Enter') {\r\n            return;\r\n        }\r\n        updateTask();\r\n    }\r\n\r\n    function updateTask() {\r\n        props.updateTask(currentInput);\r\n        toggleEdit(!isEdit);\r\n    }\r\n\r\n    const inputRef = useRef();\r\n\r\n    var editBox = (\r\n        <input\r\n            className=\"form-control\"\r\n            placeholder='Edit task'\r\n            value={currentInput}\r\n            onChange={handleInput}\r\n            onKeyDown={handleKeyDown}\r\n            onBlur={updateTask}\r\n            ref={inputRef}\r\n        />\r\n    );\r\n\r\n    var label = (\r\n        <div className={`cursor-pointer ${props.checked && 'complete'}`} onClick={() => { toggleEdit(!isEdit) }} >\r\n            {props.label}\r\n        </div>\r\n    );\r\n\r\n    var dislayItem = isEdit ? editBox : label;\r\n    return (\r\n        <li className=\"list-group-item\">\r\n            <div className='d-flex flex-row align-items-center'>\r\n                {!isEdit && <div className='flex-grow-0 flex-shrink-0 pr-2 mr-2 border-right'>\r\n                    <div className=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" className=\"custom-control-input\" id={props.i} checked={props.checked} onChange={() => { props.check(!props.checked) }} />\r\n                        <label className=\"custom-control-label\" htmlFor={props.i}></label>\r\n                    </div>\r\n                </div>}\r\n                <div className='flex-grow-1 flex-shrink-0'>\r\n                    {dislayItem}\r\n                </div>\r\n                {!isEdit && <div className='flex-grow-0 flex-shrink-0 pl-2 border-left'>\r\n                    <Button\r\n                        className='btn btn-link padding-0'\r\n                        onClick={props.deleteItem}\r\n                        toolTip='Delete'\r\n                    >\r\n                        <i className='far fa-trash-alt'></i>\r\n                    </Button>\r\n                </div>}\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nfunction Button(props) {\r\n    return (\r\n        <button\r\n            className={props.className}\r\n            onClick={props.onClick}\r\n        // data-toggle=\"tooltip\"\r\n        // data-placement=\"bottom\"\r\n        // title={props.toolTip}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}","import React, { Fragment, useState, useEffect } from 'react';\r\nimport types from './showTypes.json';\r\nimport TodoItem from './TodoItem';\r\n\r\nexport default function Todo(props) {\r\n    const [currentInput, inputUpdate] = useState('');\r\n    const [list, listUpdate] = useState([]);\r\n    const [showType, changeShow] = useState('All');\r\n\r\n    useEffect(() => {\r\n        if (typeof (Storage) !== \"undefined\") {\r\n            let data = localStorage.getItem(\"list\");\r\n            data = data ? JSON.parse(data) : [];\r\n            listUpdate(data);\r\n        }\r\n    }, []);\r\n\r\n    function handleInput(e) {\r\n        const { value } = e.currentTarget;\r\n        inputUpdate(value);\r\n    }\r\n\r\n    function updateFn(e) {\r\n        listUpdate(e);\r\n        localStorage.setItem(\"list\", JSON.stringify(e));\r\n    }\r\n\r\n    function handleKeyDown(e) {\r\n        if (e.key !== 'Enter') {\r\n            return;\r\n        }\r\n        const c = [...list];\r\n        c.push({ label: currentInput, checked: false });\r\n        updateFn(c);\r\n        inputUpdate('');\r\n    }\r\n\r\n    function updateItem(val, index) {\r\n        const c = [...list];\r\n        c[index].label = val;\r\n        updateFn(c);\r\n    }\r\n\r\n    function deleteItem(index) {\r\n        const c = [...list];\r\n        c.splice(index, 1);\r\n        updateFn(c);\r\n    }\r\n\r\n    function check(val, index) {\r\n        const c = [...list];\r\n        c[index].checked = val;\r\n        updateFn(c);\r\n    }\r\n\r\n    let todoList = list.map((v, i) => {\r\n        return (\r\n            <TodoItem\r\n                i={i}\r\n                key={i}\r\n                label={v.label}\r\n                checked={v.checked}\r\n                updateTask={(c) => { updateItem(c, i) }}\r\n                deleteItem={() => { deleteItem(i) }}\r\n                check={(c) => { check(c, i) }}\r\n            />\r\n        )\r\n    });\r\n\r\n    let displayList = todoList.filter((v) => {\r\n        switch (showType) {\r\n            case 'checked':\r\n                return v.props.checked === true;\r\n            case 'unchecked':\r\n                return v.props.checked === false;\r\n            default:\r\n                return true;\r\n        }\r\n    });\r\n\r\n    let listHelper = list.length > 0 && (<small className=\"form-text text-muted\">Click on text to edit</small>);\r\n\r\n    let btnList = types.map((v) => {\r\n        return (\r\n            <button\r\n                key={v.value}\r\n                onClick={() => { changeShow(v.value) }}\r\n                className={`semi-bold btn btn-sm ${v.value === showType ? 'btn-primary' : 'btn-outline-primary'}`}>\r\n                {v.label}\r\n            </button>\r\n        )\r\n    });\r\n\r\n    let btnGroup = list.length > 0 && (\r\n        <div className=\"mt-4 btn-group btn-block\">\r\n            {btnList}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    placeholder='Add a new task'\r\n                    value={currentInput}\r\n                    onChange={handleInput}\r\n                    onKeyDown={handleKeyDown}\r\n                />\r\n                <small className=\"form-text text-muted\">Press 'Enter' to insert</small>\r\n            </div>\r\n            <ul className=\"list-group\">\r\n                {displayList}\r\n            </ul>\r\n            {listHelper}\r\n            {btnGroup}\r\n        </Fragment>\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport ThemeToggler from './components/ThemeToggler';\r\nimport Todo from './components/Todo';\r\nimport \"./assets/styles/main.scss\";\r\n\r\nexport default function App() {\r\n\tconst [theme, themeChange] = useState('light');\r\n\r\n\treturn (\r\n\t\t<div className={`app app-${theme}`}>\r\n\t\t\t<div className='container py-3'>\r\n\t\t\t\t<ThemeToggler theme={themeChange} />\r\n\t\t\t\t<h1 className='text-center form-group'>Todo</h1>\r\n\t\t\t\t<Todo />\r\n\t\t\t\t<div className=\"text-center mt-5 form-text text-muted\">\r\n\t\t\t\t\t<small>Created by <a href=\"https://github.com/fa-901\" rel='noopener noreferrer' target=\"_blank\">fa-901</a></small>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}